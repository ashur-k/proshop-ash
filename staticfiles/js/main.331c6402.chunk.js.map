{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/OrderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducer.js","reducers/orderReducer.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","console","log","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","varaint","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.331c6402.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\n\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { \r\n    productListReducer, \r\n    productDetailsReducer, \r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer, \r\n    userUpdateProfileReducer, \r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n\r\n} from './reducers/userReducer'\r\nimport { \r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n } from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete:productDeleteReducer,\r\n    productCreate:productCreateReducer,\r\n    productUpdate:productUpdateReducer,\r\n    productReviewCreate:productReviewCreateReducer,\r\n    productTopRated:productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy:orderListMyReducer,\r\n    orderList:orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n        cart: { \r\n            cartItems: cartItemsFromStorage,\r\n            shippingAddress: shippingAddressFromStorage,\r\n         },\r\n        userLogin: { userInfo:userInfoFromStorage }\r\n    }\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n    export default store","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n } from '../constants/productConstants'\r\n\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products:[] }\r\n        \r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                products: action.payload.products,\r\n                page:action.payload.page,\r\n                pages:action.payload.pages\r\n             }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews:[]} }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        \r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        \r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success:true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        \r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success:true, product:action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product:{} }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        \r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success:true, product:action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product:{} }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products:[]}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products:[]}\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS,\r\n } from '../constants/cartConstants'\r\n\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        \r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        \r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod:action.payload\r\n            }\r\n        \r\n        case CART_CLEAR_ITEMS:\r\n        return{\r\n            ...state,\r\n            cartItems:[]\r\n        }\r\n           \r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {  }, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        \r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_LOGOUT:\r\n            return {}\r\n    \r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {  }, action) => {\r\n    switch(action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        \r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_LOGOUT:\r\n            return {}\r\n    \r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch(action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        \r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {  }, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        \r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return{}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users:[] }, action) => {\r\n    switch(action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        \r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false,  users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_LIST_RESET:\r\n            return{ users: []}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = { }, action) => {\r\n    switch(action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        \r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false,  success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) => {\r\n    switch(action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        \r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false,  success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n    \r\n        case USER_UPDATE_RESET:\r\n            return { user:{} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n } \r\n    from '../constants/OrderConstants'\r\n\r\n    export const orderCreateReducer = (state={}, action) => {\r\n        switch(action.type){\r\n            case ORDER_CREATE_REQUEST:\r\n                return{\r\n                    loading: true\r\n                }\r\n\r\n            case ORDER_CREATE_SUCCESS:\r\n                return{\r\n                    loading: false,\r\n                    success:true,\r\n                    order:action.payload\r\n\r\n                }            \r\n            case ORDER_CREATE_FAIL:\r\n                return{\r\n                    loading: false,\r\n                    error:action.payload\r\n\r\n                    }\r\n            case ORDER_CREATE_RESET:\r\n                return{\r\n                    \r\n                    }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    export const orderDetailsReducer = (state={loading:true, orderItems:[], shippingAddress:{}}, action) => {\r\n        switch(action.type){\r\n            case ORDER_DETAILS_REQUEST:\r\n                return{\r\n                    ...state,\r\n                    loading: true\r\n                }\r\n\r\n            case ORDER_DETAILS_SUCCESS:\r\n                return{\r\n                    loading: false,\r\n                    order:action.payload\r\n\r\n                }            \r\n            case ORDER_DETAILS_FAIL:\r\n                return{\r\n                    loading: false,\r\n                    error:action.payload\r\n                    }\r\n            \r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    export const orderPayReducer = (state={}, action) => {\r\n        switch(action.type){\r\n            case ORDER_PAY_REQUEST:\r\n                return{\r\n                    loading: true\r\n                }\r\n\r\n            case ORDER_PAY_SUCCESS:\r\n                return{\r\n                    loading: false,\r\n                    success: true\r\n                }            \r\n            case ORDER_PAY_FAIL:\r\n                return{\r\n                    loading: false,\r\n                    error:action.payload\r\n                    }\r\n\r\n            case ORDER_PAY_RESET:\r\n                return{\r\n                    \r\n                }\r\n            \r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    export const orderListMyReducer = (state={orders:[]}, action) => {\r\n        switch(action.type){\r\n            case ORDER_LIST_MY_REQUEST:\r\n                return{\r\n                    loading: true\r\n                }\r\n\r\n            case ORDER_LIST_MY_SUCCESS:\r\n                return{\r\n                    loading: false,\r\n                    orders: action.payload\r\n                }            \r\n            case ORDER_LIST_MY_FAIL:\r\n                return{\r\n                    loading: false,\r\n                    error:action.payload\r\n                    }\r\n\r\n            case ORDER_LIST_MY_RESET:\r\n                return{\r\n                    orders: []\r\n                }\r\n            \r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    export const orderDeliverReducer = (state={}, action) => {\r\n        switch(action.type){\r\n            case ORDER_DELIVER_REQUEST:\r\n                return{\r\n                    loading: true\r\n                }\r\n\r\n            case ORDER_DELIVER_SUCCESS:\r\n                return{\r\n                    loading: false,\r\n                    success: true\r\n                }            \r\n            case ORDER_DELIVER_FAIL:\r\n                return{\r\n                    loading: false,\r\n                    error:action.payload\r\n                    }\r\n\r\n            case ORDER_DELIVER_RESET:\r\n                return{\r\n                    \r\n                }\r\n            \r\n            default:\r\n                return state\r\n        }\r\n    }    \r\n\r\n    export const orderListReducer = (state={orders:[]}, action) => {\r\n        switch(action.type){\r\n            case ORDER_LIST_REQUEST:\r\n                return{\r\n                    loading: true\r\n                }\r\n\r\n            case ORDER_LIST_SUCCESS:\r\n                return{\r\n                    loading: false,\r\n                    orders: action.payload\r\n                }            \r\n            case ORDER_LIST_FAIL:\r\n                return{\r\n                    loading: false,\r\n                    error:action.payload\r\n                    }\r\n            \r\n            default:\r\n                return state\r\n        }\r\n    }\r\n    \r\n    ","import React, {useState} from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n            type='text'\r\n            name='q'\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            className='mr-sm-2 ml-sm-5'\r\n            >\r\n\r\n            </Form.Control>\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET, } from '../constants/OrderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config            \r\n        )\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n \r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET })\r\n    \r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name':name, 'email': email, 'password': password },\r\n            config            \r\n        )\r\n\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n \r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type:USER_DETAILS_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/${id}/`,\r\n           \r\n            config            \r\n        )\r\n\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n \r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n           \r\n            config            \r\n        )\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n \r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type:USER_LIST_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/`,\r\n            config            \r\n        )\r\n\r\n        dispatch({\r\n            type:USER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type:USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n \r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n    const dispatch = useDispatch ()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n    <header>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand>ProShop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <SearchBox />\r\n                <Nav className=\"ml-auto\">\r\n\r\n                    <LinkContainer to='/cart'>\r\n                        <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {userInfo ? (\r\n                        <NavDropdown title={userInfo.name} id='username'>\r\n                            <LinkContainer to='/profile'>\r\n                                <NavDropdown.Item>Profile</NavDropdown.Item>                              \r\n                            </LinkContainer>\r\n                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>     \r\n                        </NavDropdown>\r\n                    ):(\r\n                        <LinkContainer to='/login'>\r\n                            <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                        </LinkContainer>    \r\n                    )}\r\n\r\n                    {userInfo && userInfo.isAdmin && (\r\n                        <NavDropdown title='Admin' id='adminmenu'>\r\n                            <LinkContainer to='/admin/userlist'>\r\n                                <NavDropdown.Item>Users</NavDropdown.Item>                              \r\n                            </LinkContainer>\r\n\r\n                            <LinkContainer to='/admin/productlist'>\r\n                                <NavDropdown.Item>Products</NavDropdown.Item>                              \r\n                            </LinkContainer>\r\n\r\n                            <LinkContainer to='/admin/orderlist'>\r\n                                <NavDropdown.Item>Orders</NavDropdown.Item>                              \r\n                            </LinkContainer>\r\n                        </NavDropdown>\r\n                    )}\r\n\r\n                        \r\n                </Nav>            \r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>    \r\n        </footer>\r\n       \r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                    ? 'fas fa-star'\r\n                    : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                    ? 'fas fa-star'\r\n                    : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                    ? 'fas fa-star'\r\n                    : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                    ? 'fas fa-star'\r\n                    : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                    ? 'fas fa-star'\r\n                    : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display:'block'\r\n            }}\r\n            >\r\n            <span className=\"sr-only\">Loading ...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword='', isAdmin = false }) {\r\n\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n    \r\n    console.log('KEYWORD:', keyword)\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer \r\n                key={x + 1}\r\n                    to={!isAdmin \r\n                        ?(\r\n                            `/?keyword=${keyword}&page=${x + 1}`\r\n                            )\r\n                        :(  \r\n                            `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                        )\r\n                    }                \r\n                >\r\n                    <Pagination.Item \r\n                        active={x + 1 === page}>\r\n                        {x + 1}                    \r\n                    </Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n       \r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n } \r\n from '../constants/productConstants'\r\n\r\n\r\n export const listProducts = (keyword = '') => async (dispatch) => {\r\n     try{\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const{ data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type:PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n     }catch(error){\r\n        dispatch({\r\n            type:PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n\r\n        })\r\n     }\r\n }\r\n\r\n export const listTopProducts = () => async (dispatch) => {\r\n    try{\r\n       dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n       const{ data } = await axios.get(`/api/products/top/`)\r\n\r\n       dispatch({\r\n           type:PRODUCT_TOP_SUCCESS,\r\n           payload: data\r\n       })\r\n    }catch(error){\r\n       dispatch({\r\n           type:PRODUCT_TOP_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n\r\n       })\r\n    }\r\n}\r\n\r\n export const listProductDetails = (id) => async (dispatch) => {\r\n    try{\r\n       dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n       const{ data } = await axios.get(`/api/products/${id}`)\r\n\r\n       dispatch({\r\n           type:PRODUCT_DETAILS_SUCCESS,\r\n           payload: data\r\n       })\r\n    }catch(error){\r\n       dispatch({\r\n           type:PRODUCT_DETAILS_FAIL,\r\n           payload: error.response && error.response.data.detail\r\n           ? error.response.data.detail\r\n           : error.message,\r\n\r\n       })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_DELETE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type:PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n \r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type:PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n \r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_REQUEST\r\n        })\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    } catch(error){\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n \r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview= (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, dispatch)\r\n\r\n\r\n    return (\r\n        loading \r\n        ?(<Loader/>)\r\n        :error ? \r\n        (<Message variant='danger'>{error}</Message>)\r\n        :(\r\n            <Carousel pause='hover' className='bg-dark'>\r\n                {products.map (product => (\r\n                    <Carousel.Item key={product._id}>\r\n                        <Link to={`/product/${product._id}`}>\r\n                            <Image src={product.image} alt={product.name} fluid/>\r\n                            <Carousel.Caption className='carousel.caption'>\r\n                                <h4>{product.name} (${product.price})</h4>\r\n                            </Carousel.Caption>\r\n                        </Link>\r\n                    </Carousel.Item>\r\n                )) }\r\n            </Carousel>\r\n        )\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n\r\n    let keyword = history.location.search\r\n    \r\n    useEffect( () => {\r\n    \r\n        dispatch(listProducts(keyword))\r\n        \r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            \r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                <div>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                         <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                        </Col>\r\n                            ))}\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keyword={keyword}/>\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n    \r\n    const addToCartHandler = () => {\r\n        //console.log('add to cart:', match.params.id)\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id,{\r\n                rating,\r\n                comment,\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className=\"btn btn-light my-3\">Go Back</Link>\r\n            {loading ?\r\n                <Loader /> \r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                :(\r\n                    <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Price: ${product.price}\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Description: {product.description}\r\n                                    </ListGroup.Item>\r\n\r\n                                </ListGroup>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <ListGroup variant='flush'>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                            {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                {product.countInStock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Qty</Col>\r\n                                            <Col xs='auto' className='my-1'>\r\n                                                <Form.Control\r\n                                                    as=\"select\"\r\n                                                    value={qty}\r\n                                                    onChange={(e) => setQty(e.target.value)}>\r\n                                                    {\r\n                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                    }\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        onClick={addToCartHandler}\r\n                                        className='btn-block'\r\n                                        disabled={product.countInStock === 0}\r\n                                        type='button'>\r\n                                        Add to Cart\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h4>Reviews</h4>\r\n\r\n                                {loadingProductReview && <Loader/>}\r\n                                {\r\n                                    successProductReview && \r\n                                    <Message varaint='success'>Review Submitted</Message>\r\n                                }\r\n                                {\r\n                                    errorProductReview && \r\n                                    <Message varaint='danger'>{errorProductReview}</Message>\r\n                                }\r\n\r\n\r\n                                {\r\n                                    product.reviews.length === 0 && \r\n                                    <Message variant='info'>No Reviews</Message>\r\n                                }\r\n                                <ListGroup variant='flush'>\r\n                                    {product.reviews.map((review) =>(\r\n                                        <ListGroup.Item key={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} color='#f8e825'/>\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n                                            {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={rating}\r\n                                                        onChange={(e) => setRating(e.target.value)}>\r\n                                                        <option value=''>Select...</option>\r\n                                                        <option value='1'>1 - Poor</option>\r\n                                                        <option value='2'>2 - Fair</option>\r\n                                                        <option value='3'>3 - Good</option>\r\n                                                        <option value='4'>4 - Very Good</option>\r\n                                                        <option value='5'>5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label>Review</Form.Label>\r\n                                                    <Form.Control \r\n                                                    as='textarea'\r\n                                                    row='5'\r\n                                                    value={comment}\r\n                                                    onChange={(e) => setComment(e.target.value)}\r\n                                                    ></Form.Control>\r\n                                                </Form.Group>\r\n                                                <Button\r\n                                                    disabled={loadingProductReview}\r\n                                                    type='submit'\r\n                                                    variant='primary'\r\n                                                >Submit</Button>\r\n                                            </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'>\r\n                                                    Please <Link to='/login'>Login</Link> or <Link to='/Register'>Register</Link> an account to write a review.\r\n                                                </Message>\r\n                                            )}\r\n                                            \r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n               \r\n                )\r\n            }\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    \r\n    CART_SAVE_PAYMENT_METHOD,\r\n } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message  from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector (state => state.cart)\r\n    const { cartItems } = cart\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () =>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n        \r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your Cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ):(\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                       <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                            {\r\n                                            [...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )\r\n            }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler} \r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() =>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    \r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\" placeholder=\"Enter Email\" value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >                        \r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\" placeholder=\"Enter Password\" value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >                        \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link \r\n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({location, history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() =>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        if(password != confirmPassword){\r\n            setMessage ('Password do not match')\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"name\" placeholder=\"Enter Name\" value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >                        \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"email\" placeholder=\"Enter Email\" value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >                        \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"password\" placeholder=\"Enter Password\" value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >                        \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                        type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >                        \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link \r\n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error: errorOrders, orders} = orderListMy\r\n\r\n    useEffect(() =>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id){\r\n                dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage ('Password do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({\r\n                'id':user._id,\r\n                'name':name,\r\n                'email':email,\r\n                'password':password\r\n            }))\r\n            setMessage ('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n    \r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"name\" placeholder=\"Enter Name\" value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >                        \r\n                        </Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"email\" placeholder=\"Enter Email\" value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >                        \r\n                        </Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            \r\n                            type=\"password\" placeholder=\"Enter Password\" value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >                        \r\n                        </Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                       \r\n                            type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >                        \r\n                        </Form.Control>\r\n                    </Form.Group>\r\n    \r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ): errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ): (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) :(\r\n                                        <i className='fas fa-times' style={{ color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                    <td></td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL, \r\n    \r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n } \r\n    from '../constants/OrderConstants'\r\n    import { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\n    export const createOrder = (order) => async (dispatch, getState) => {\r\n        try{\r\n            dispatch({\r\n                type:ORDER_CREATE_REQUEST\r\n            })\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState()\r\n    \r\n            const config = {\r\n                headers:{\r\n                    'content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n    \r\n            const { data } = await axios.post(\r\n                `/api/orders/add/`,\r\n                order,\r\n                config\r\n            )\r\n    \r\n            dispatch({\r\n                type:ORDER_CREATE_SUCCESS,\r\n                payload:data\r\n            })\r\n\r\n            dispatch({\r\n                type:CART_CLEAR_ITEMS,\r\n                payload:data\r\n            })\r\n    \r\n            localStorage.removeItem('cartItems')\r\n    \r\n        } catch(error){\r\n            dispatch({\r\n                type:ORDER_CREATE_FAIL,\r\n                payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n     \r\n            })\r\n        }\r\n    }\r\n\r\n    export const getOrderDetails = (id) => async (dispatch, getState) => {\r\n        try{\r\n            dispatch({\r\n                type:ORDER_DETAILS_REQUEST\r\n            })\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState()\r\n    \r\n            const config = {\r\n                headers:{\r\n                    'content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n    \r\n            const { data } = await axios.get(\r\n                `/api/orders/${id}/`,\r\n                config\r\n            )\r\n    \r\n            dispatch({\r\n                type:ORDER_DETAILS_SUCCESS,\r\n                payload:data\r\n            })\r\n\r\n    \r\n        } catch(error){\r\n            dispatch({\r\n                type:ORDER_DETAILS_FAIL,\r\n                payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n     \r\n            })\r\n        }\r\n    }\r\n\r\n    export const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n        try{\r\n            dispatch({\r\n                type:ORDER_PAY_REQUEST\r\n            })\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState()\r\n    \r\n            const config = {\r\n                headers:{\r\n                    'content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n    \r\n            const { data } = await axios.put(\r\n                `/api/orders/${id}/pay/`,\r\n                paymentResult,\r\n                config\r\n            )\r\n    \r\n            dispatch({\r\n                type:ORDER_PAY_SUCCESS,\r\n                payload:data\r\n            })\r\n\r\n    \r\n        } catch(error){\r\n            dispatch({\r\n                type:ORDER_PAY_FAIL,\r\n                payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n     \r\n            })\r\n        }\r\n    }\r\n\r\n    export const deliverOrder = (order) => async (dispatch, getState) => {\r\n        try{\r\n            dispatch({\r\n                type:ORDER_DELIVER_REQUEST\r\n            })\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState()\r\n    \r\n            const config = {\r\n                headers:{\r\n                    'content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n    \r\n            const { data } = await axios.put(\r\n                `/api/orders/${order._id}/deliver/`,\r\n                {},\r\n                config\r\n            )\r\n    \r\n            dispatch({\r\n                type:ORDER_DELIVER_SUCCESS,\r\n                payload:data\r\n            })\r\n\r\n    \r\n        } catch(error){\r\n            dispatch({\r\n                type:ORDER_DELIVER_FAIL,\r\n                payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n     \r\n            })\r\n        }\r\n    }\r\n\r\n    export const listMyOrders = () => async (dispatch, getState) => {\r\n        try{\r\n            dispatch({\r\n                type:ORDER_LIST_MY_REQUEST\r\n            })\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState()\r\n    \r\n            const config = {\r\n                headers:{\r\n                    'content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n    \r\n            const { data } = await axios.get(\r\n                `/api/orders/myorders/`,\r\n                config\r\n            )\r\n    \r\n            dispatch({\r\n                type:ORDER_LIST_MY_SUCCESS,\r\n                payload:data\r\n            })\r\n\r\n    \r\n        } catch(error){\r\n            dispatch({\r\n                type:ORDER_LIST_MY_FAIL,\r\n                payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n     \r\n            })\r\n        }\r\n    }\r\n\r\n    export const listOrders = () => async (dispatch, getState) => {\r\n        try{\r\n            dispatch({\r\n                type:ORDER_LIST_REQUEST\r\n            })\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState()\r\n    \r\n            const config = {\r\n                headers:{\r\n                    'content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n    \r\n            const { data } = await axios.get(\r\n                `/api/orders/`,\r\n                config\r\n            )\r\n    \r\n            dispatch({\r\n                type:ORDER_LIST_SUCCESS,\r\n                payload:data\r\n            })\r\n\r\n    \r\n        } catch(error){\r\n            dispatch({\r\n                type:ORDER_LIST_FAIL,\r\n                payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n     \r\n            })\r\n        }\r\n    }\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}                \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}                \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}                \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}                \r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\" placeholder=\"Enter address\" value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >                        \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\" placeholder=\"Enter city\" value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >                        \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\" placeholder=\"Enter postal code\" value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >                        \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\" placeholder=\"Enter country\" value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >                        \r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n       history.push('/shipping') \r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder') \r\n    }\r\n\r\n    return (\r\n       <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                       <Form.Check\r\n                        type='radio' \r\n                        label='Paypal or Credit Card' \r\n                        id='paypal' \r\n                        name='paymentMethod'\r\n                        checked\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                       >\r\n\r\n                       </Form.Check> \r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n       </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/OrderConstants'\r\n\r\n\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector( state => state.orderCreate )\r\n    const {order, error, success} = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type:ORDER_CREATE_RESET})\r\n        }\r\n\r\n    }, [success, history])\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},\r\n                                {cart.shippingAddress.city},\r\n                                {' '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty.    \r\n                            </Message>\r\n                            :(\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )\r\n                        }\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cart.cartItems === 0}\r\n                                onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET, } from '../constants/OrderConstants'\r\n\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n\r\n    const orderDetails = useSelector( state => state.orderDetails)\r\n    const {order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector( state => state.orderPay)\r\n    const {loading:loadingPay, success:successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector( state => state.orderDeliver)\r\n    const {loading:loadingDeliver, success:successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector( state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n    //AfjwN65lGgJwn89o6lWr8Via8AoSZO2wzq2ZO8Y3vri_Gtoa12pDZkafGDityQvVGOsAE8BgwxirNWmE\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AfjwN65lGgJwn89o6lWr8Via8AoSZO2wzq2ZO8Y3vri_Gtoa12pDZkafGDityQvVGOsAE8BgwxirNWmE'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({type:ORDER_PAY_RESET})\r\n            dispatch({type:ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }        \r\n\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    \r\n    return loading ? (\r\n        <Loader />\r\n    ) : error  ?(\r\n        <Message variant='danger'>{error}</Message>\r\n    ) :   (\r\n        <div>\r\n           <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={7}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name:</strong>{order.user.name}</p>\r\n                            <p>\r\n                                <strong>Email:</strong>\r\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address},\r\n                                {order.shippingAddress.city},\r\n                                {' '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                            ): ( <Message variant='warning'>Not Delivered</Message>)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ): ( <Message variant='warning'>Not Paid</Message>)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty.    \r\n                            </Message>\r\n                            :(\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )\r\n                        }\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={5}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className='text-center'>   \r\n                            <LinkContainer className='' to={`/profile/`}>                           \r\n                                <Button className='btn-sm '>\r\n                                    <i className=\"fas fa-long-arrow-alt-left\"> </i>\r\n                                    <span> Go back to Profile Page</span>\r\n                                </Button>\r\n                            </LinkContainer>\r\n                        </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                            <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                            <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}\r\n                                            />\r\n                                        )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            \r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered &&(\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}\r\n                                >\r\n                                    Mark As Deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        \r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen( { history }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect (() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this user?')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                :\r\n                (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>                            \r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.isAdmin ?(\r\n                                        <i className='fas fa-check' style={{color: 'green'}}></i>\r\n                                    ): \r\n                                    (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit text-info'></i>\r\n                                                Edit\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button \r\n                                        variant='danger' \r\n                                        className='btn-sm' \r\n                                        onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                        <span> Del</span>\r\n                                    </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history}) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate } = userUpdate\r\n\r\n    useEffect(() =>{\r\n\r\n        if (successUpdate) {\r\n            dispatch({type:USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n    \r\n        }        \r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault() \r\n        dispatch(updateUser({_id:user._id, name, email, isAdmin}))\r\n    }\r\n    return (\r\n        <div>\r\n        <Link to='/admin/userlist'>\r\n            Go Back\r\n        </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danher'>{errorUpdate}</Message> }\r\n                 \r\n                {loading \r\n                    ? <Loader /> \r\n                    :error \r\n                    ? <Message variant='danher'>{error}</Message> \r\n                    :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"name\" placeholder=\"Enter Name\" value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >                        \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"email\" placeholder=\"Enter Email\" value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >                        \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check                        \r\n                                    type=\"checkbox\" \r\n                                    label=\"Is Admin\" \r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >                        \r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                            Update\r\n                            </Button>\r\n                         </Form>\r\n                    )\r\n                }\r\n                \r\n        </FormContainer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductListScreen( { history, match }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading:loadingDelete, error:errorDelete, success:successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect (() => {\r\n\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if(!userInfo.isAdmin){\r\n           history.push('/login')\r\n        }\r\n\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this product?')){\r\n           dispatch(deleteProduct(id))\r\n        }\r\n        \r\n    }\r\n\r\n    const createProductHandler = (product) => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                    <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                :\r\n                (   <div>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>PRICE</th>\r\n                                    <th>CATEGORY</th>\r\n                                    <th>BRAND</th>\r\n                                    <th></th>\r\n                                </tr>                            \r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {products.map(product => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>${product.price}</td>\r\n                                        <td>${product.category}</td>\r\n                                        <td>${product.brand}</td>\r\n                                    \r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit text-info'></i>\r\n                                                    Edit\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            <Button \r\n                                            variant='danger' \r\n                                            className='btn-sm' \r\n                                            onClick={() => deleteHandler(product._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                            <span> Del</span>\r\n                                        </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductEditScreen({ match, history}) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        <Link to='/admin/productlist'>\r\n            Go Back\r\n        </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading \r\n                    ? <Loader /> \r\n                    :error \r\n                    ? <Message variant='danher'>{error}</Message> \r\n                    :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"name\" placeholder=\"Enter Name\" value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >                        \r\n                                </Form.Control>\r\n                            </Form.Group>   \r\n                            \r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"number\" \r\n                                    placeholder=\"Enter Price\" \r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >                        \r\n                                </Form.Control>\r\n                            </Form.Group>   \r\n                            \r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\" \r\n                                    placeholder=\"Add image\" \r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >                        \r\n                                </Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>   \r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\" \r\n                                    placeholder=\"Enter brand\" \r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >                        \r\n                                </Form.Control>\r\n                            </Form.Group> \r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"number\" \r\n                                    placeholder=\"Enter stock\" \r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >                        \r\n                                </Form.Control>\r\n                            </Form.Group> \r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\" \r\n                                    placeholder=\"Enter category\" \r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >                        \r\n                                </Form.Control>\r\n                            </Form.Group> \r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\" \r\n                                    placeholder=\"Enter description\" \r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >                        \r\n                                </Form.Control>\r\n                            </Form.Group> \r\n                            \r\n                            \r\n                            \r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n                         </Form>\r\n                    )\r\n                }\r\n                \r\n        </FormContainer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen( { history }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect (() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                :\r\n                (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>User</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>                            \r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user && order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ?(\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                    </td>\r\n                                    <td>{order.isDelivered ?(\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />    \n      <main  className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} exact />\n          <Route path='/register' component={RegisterScreen} exact />\n          <Route path='/profile' component={ProfileScreen} exact />\n          <Route path='/shipping' component={ShippingScreen} exact />\n          <Route path='/placeorder' component={PlaceOrderScreen} exact />\n          <Route path='/order/:id' component={OrderScreen} exact />\n          <Route path='/payment' component={PaymentScreen} exact />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          \n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}